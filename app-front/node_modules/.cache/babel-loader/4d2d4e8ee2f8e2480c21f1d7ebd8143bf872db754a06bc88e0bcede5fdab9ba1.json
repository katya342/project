{"ast":null,"code":"import api from \"../api\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nconst navigate = useNavigate();\nexport const loginRequest = () => ({\n  type: LOGIN_REQUEST\n});\nexport const loginSuccess = userData => dispatch => {\n  dispatch({\n    type: LOGIN_SUCCESS,\n    payload: userData\n  });\n  // Navigate to the home page if login is successful\n  navigate('/home');\n};\nexport const loginFailure = error => ({\n  type: LOGIN_FAILURE,\n  payload: error\n});\nexport const login = (email, password) => {\n  return async dispatch => {\n    dispatch(loginRequest());\n    try {\n      const response = await api.post('/authorize', {\n        email,\n        password\n      });\n      console.log(response.data);\n      dispatch(loginSuccess(response.data));\n    } catch (error) {\n      dispatch(loginFailure(error.response.data.message));\n    }\n  };\n};","map":{"version":3,"names":["api","Navigate","useNavigate","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","navigate","loginRequest","type","loginSuccess","userData","dispatch","payload","loginFailure","error","login","email","password","response","post","console","log","data","message"],"sources":["C:/Programming/project/app-front/src/redux/actions.js"],"sourcesContent":["import api from \"../api\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\n\r\nconst navigate = useNavigate()\r\nexport const loginRequest = () => ({\r\n    type: LOGIN_REQUEST\r\n});\r\n\r\n\r\nexport const loginSuccess = (userData) => (dispatch) => {\r\n    dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: userData\r\n    });\r\n    // Navigate to the home page if login is successful\r\n    navigate('/home');\r\n};\r\n\r\n\r\nexport const loginFailure = (error) => ({\r\n    type: LOGIN_FAILURE,\r\n    payload: error,\r\n})  \r\n\r\n\r\nexport const login = (email, password ) => {\r\n    return async (dispatch) => {\r\n        \r\n        dispatch(loginRequest());\r\n        try {\r\n            const response = await api.post('/authorize', {email, password});\r\n            console.log(response.data)\r\n            dispatch(loginSuccess(response.data));\r\n        }\r\n        catch(error)\r\n        {   \r\n            dispatch(loginFailure(error.response.data.message));\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,QAAQ;AACxB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAG5C,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;AAC9B,OAAO,MAAMK,YAAY,GAAGA,CAAA,MAAO;EAC/BC,IAAI,EAAEL;AACV,CAAC,CAAC;AAGF,OAAO,MAAMM,YAAY,GAAIC,QAAQ,IAAMC,QAAQ,IAAK;EACpDA,QAAQ,CAAC;IACLH,IAAI,EAAEJ,aAAa;IACnBQ,OAAO,EAAEF;EACb,CAAC,CAAC;EACF;EACAJ,QAAQ,CAAC,OAAO,CAAC;AACrB,CAAC;AAGD,OAAO,MAAMO,YAAY,GAAIC,KAAK,KAAM;EACpCN,IAAI,EAAEH,aAAa;EACnBO,OAAO,EAAEE;AACb,CAAC,CAAC;AAGF,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAM;EACvC,OAAO,MAAON,QAAQ,IAAK;IAEvBA,QAAQ,CAACJ,YAAY,CAAC,CAAC,CAAC;IACxB,IAAI;MACA,MAAMW,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,YAAY,EAAE;QAACH,KAAK;QAAEC;MAAQ,CAAC,CAAC;MAChEG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BX,QAAQ,CAACF,YAAY,CAACS,QAAQ,CAACI,IAAI,CAAC,CAAC;IACzC,CAAC,CACD,OAAMR,KAAK,EACX;MACIH,QAAQ,CAACE,YAAY,CAACC,KAAK,CAACI,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC;IACvD;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}