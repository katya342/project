{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proggramming\\\\app-front\\\\src\\\\components\\\\SubsComponent.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubsComponent = () => {\n  _s();\n  const [subData, setSubData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await api.get('/user/active-subs');\n        setSubData(response.data || []); // Убедитесь, что response.data является массивом\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching active subscriptions:', error);\n      }\n    };\n    fetchData();\n  }, []); // Пустой массив зависимостей гарантирует, что useEffect сработает только после монтирования компонента\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Active subs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), subData.map(subs => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: subs.plan_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, subs.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(SubsComponent, \"tNlYxqgMfy/8AtvdIDMeQ6kAYy8=\");\n_c = SubsComponent;\nexport default SubsComponent;\nvar _c;\n$RefreshReg$(_c, \"SubsComponent\");","map":{"version":3,"names":["useState","useEffect","api","jsxDEV","_jsxDEV","SubsComponent","_s","subData","setSubData","fetchData","response","get","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","subs","plan_id","id","_c","$RefreshReg$"],"sources":["C:/Proggramming/app-front/src/components/SubsComponent.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport api from \"../api\";\r\n\r\nconst SubsComponent = () => {\r\n    const [subData, setSubData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await api.get('/user/active-subs');\r\n                setSubData(response.data || []);  // Убедитесь, что response.data является массивом\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching active subscriptions:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []); // Пустой массив зависимостей гарантирует, что useEffect сработает только после монтирования компонента\r\n\r\n    return (\r\n        <div>\r\n            <p>Active subs</p>\r\n            {subData.map(subs => (\r\n                <div key={subs.id}>\r\n                    <div>{subs.plan_id}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubsComponent;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,mBAAmB,CAAC;QACnDH,UAAU,CAACE,QAAQ,CAACE,IAAI,IAAI,EAAE,CAAC,CAAC,CAAE;QAClCC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAChE;IACJ,CAAC;IAEDN,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIL,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACjBb,OAAO,CAACc,GAAG,CAACC,IAAI,iBACblB,OAAA;MAAAY,QAAA,eACIZ,OAAA;QAAAY,QAAA,EAAMM,IAAI,CAACC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC,GADnBE,IAAI,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACd,EAAA,CA3BID,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}