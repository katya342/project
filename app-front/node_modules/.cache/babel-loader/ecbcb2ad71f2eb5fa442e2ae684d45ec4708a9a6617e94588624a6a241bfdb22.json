{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\app-front\\\\src\\\\components\\\\subscriptions\\\\FeedBack.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport api from \"../../api\";\nimport { BASE_URL } from \"../constants\";\nimport { extractFileName } from '../utils/avatarUtils';\nimport { Button, Rating, TextField, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedBack = props => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [value, setValue] = useState(0);\n  const [rating, setRating] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await api.get(`feedbacks/${props.planId}`);\n        setData(response.data.success);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [props.planId]);\n  const handleAddComment = async () => {\n    try {\n      await api.post(`/add/feedback/${props.planId}/${props.trainerId}`, {\n        comment: inputValue,\n        rating: value\n      });\n      setInputValue(\"\");\n      setRating(0);\n      const response = await api.get(`feedbacks/${props.planId}`);\n      setData(response.data.success);\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n  const formatDate = dateStr => {\n    const date = new Date(dateStr);\n    return date.toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${BASE_URL}storage/${extractFileName(item.avatar)}`,\n        alt: \"Cannot display image\",\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: item.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: item.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        children: [\"Rating: \", /*#__PURE__*/_jsxDEV(Rating, {\n          value: item.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Posted on: \", formatDate(item.created_at)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"Write comment here\",\n      value: inputValue,\n      onChange: handleChange,\n      multiline: true,\n      rows: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Rating, {\n      name: \"simple-controlled\",\n      value: value,\n      onChange: (event, newValue) => {\n        setValue(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleAddComment,\n      children: \"Add comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(FeedBack, \"pjJFLVMOWwd+U4z6tV7cyqP1OBU=\");\n_c = FeedBack;\nexport default FeedBack;\nvar _c;\n$RefreshReg$(_c, \"FeedBack\");","map":{"version":3,"names":["useEffect","useState","api","BASE_URL","extractFileName","Button","Rating","TextField","Typography","jsxDEV","_jsxDEV","FeedBack","props","_s","data","setData","loading","setLoading","error","setError","inputValue","setInputValue","value","setValue","rating","setRating","fetchData","response","get","planId","success","handleAddComment","post","trainerId","comment","console","handleChange","event","target","formatDate","dateStr","date","Date","toLocaleString","children","map","item","src","avatar","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","user","name","variant","created_at","id","placeholder","onChange","multiline","rows","newValue","onClick","_c","$RefreshReg$"],"sources":["C:/Programming/app-front/src/components/subscriptions/FeedBack.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport api from \"../../api\";\r\nimport { BASE_URL } from \"../constants\";\r\nimport { extractFileName } from '../utils/avatarUtils';\r\nimport { Button, Rating, TextField, Typography } from \"@mui/material\";\r\n\r\nconst FeedBack = (props) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [value, setValue] = useState(0);\r\n    const [rating, setRating] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await api.get(`feedbacks/${props.planId}`);\r\n                setData(response.data.success);\r\n            } catch (error) {\r\n                setError(error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [props.planId]);\r\n\r\n    const handleAddComment = async () => {\r\n        try {\r\n            await api.post(`/add/feedback/${props.planId}/${props.trainerId}`, {\r\n                comment: inputValue,\r\n                rating: value\r\n            });\r\n            setInputValue(\"\");\r\n            setRating(0);\r\n            const response = await api.get(`feedbacks/${props.planId}`);\r\n            setData(response.data.success);\r\n        } catch (error) {\r\n            console.error(\"Error adding comment:\", error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    };\r\n    const formatDate = (dateStr) => {\r\n        const date = new Date(dateStr);\r\n        return date.toLocaleString(); \r\n        \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {data.map((item) => (\r\n                <div key={item.id}>\r\n                    <img src={`${BASE_URL}storage/${extractFileName(item.avatar)}`} alt=\"Cannot display image\" width={50} />\r\n                    <Typography>{item.user.name}</Typography>\r\n                    <Typography>{item.name}</Typography>\r\n                    <Typography>{item.comment}</Typography>\r\n                    <Typography variant=\"caption\">Rating: <Rating value={item.rating} /></Typography>\r\n                    <div>Posted on: {formatDate(item.created_at)}</div>\r\n                </div>\r\n            ))}\r\n            <TextField placeholder=\"Write comment here\" value={inputValue} onChange={handleChange} multiline rows={5}/>\r\n            <Rating name=\"simple-controlled\" value={value} onChange={(event, newValue) => { setValue(newValue) }} />\r\n            <Button variant=\"outlined\" onClick={handleAddComment}>Add comment</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedBack;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACZ,MAAM0B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMzB,GAAG,CAAC0B,GAAG,CAAE,aAAYhB,KAAK,CAACiB,MAAO,EAAC,CAAC;QAC3Dd,OAAO,CAACY,QAAQ,CAACb,IAAI,CAACgB,OAAO,CAAC;MAClC,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAAC;MACnB,CAAC,SAAS;QACND,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDS,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACd,KAAK,CAACiB,MAAM,CAAC,CAAC;EAElB,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAM7B,GAAG,CAAC8B,IAAI,CAAE,iBAAgBpB,KAAK,CAACiB,MAAO,IAAGjB,KAAK,CAACqB,SAAU,EAAC,EAAE;QAC/DC,OAAO,EAAEd,UAAU;QACnBI,MAAM,EAAEF;MACZ,CAAC,CAAC;MACFD,aAAa,CAAC,EAAE,CAAC;MACjBI,SAAS,CAAC,CAAC,CAAC;MACZ,MAAME,QAAQ,GAAG,MAAMzB,GAAG,CAAC0B,GAAG,CAAE,aAAYhB,KAAK,CAACiB,MAAO,EAAC,CAAC;MAC3Dd,OAAO,CAACY,QAAQ,CAACb,IAAI,CAACgB,OAAO,CAAC;IAClC,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZiB,OAAO,CAACjB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAMkB,YAAY,GAAIC,KAAK,IAAK;IAC5BhB,aAAa,CAACgB,KAAK,CAACC,MAAM,CAAChB,KAAK,CAAC;EACrC,CAAC;EACD,MAAMiB,UAAU,GAAIC,OAAO,IAAK;IAC5B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;IAC9B,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC;EAEhC,CAAC;EAED,oBACIjC,OAAA;IAAAkC,QAAA,GACK9B,IAAI,CAAC+B,GAAG,CAAEC,IAAI,iBACXpC,OAAA;MAAAkC,QAAA,gBACIlC,OAAA;QAAKqC,GAAG,EAAG,GAAE5C,QAAS,WAAUC,eAAe,CAAC0C,IAAI,CAACE,MAAM,CAAE,EAAE;QAACC,GAAG,EAAC,sBAAsB;QAACC,KAAK,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxG5C,OAAA,CAACF,UAAU;QAAAoC,QAAA,EAAEE,IAAI,CAACS,IAAI,CAACC;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACzC5C,OAAA,CAACF,UAAU;QAAAoC,QAAA,EAAEE,IAAI,CAACU;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACpC5C,OAAA,CAACF,UAAU;QAAAoC,QAAA,EAAEE,IAAI,CAACZ;MAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACvC5C,OAAA,CAACF,UAAU;QAACiD,OAAO,EAAC,SAAS;QAAAb,QAAA,GAAC,UAAQ,eAAAlC,OAAA,CAACJ,MAAM;UAACgB,KAAK,EAAEwB,IAAI,CAACtB;QAAO;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACjF5C,OAAA;QAAAkC,QAAA,GAAK,aAAW,EAACL,UAAU,CAACO,IAAI,CAACY,UAAU,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAN7CR,IAAI,CAACa,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACR,CAAC,eACF5C,OAAA,CAACH,SAAS;MAACqD,WAAW,EAAC,oBAAoB;MAACtC,KAAK,EAAEF,UAAW;MAACyC,QAAQ,EAAEzB,YAAa;MAAC0B,SAAS;MAACC,IAAI,EAAE;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3G5C,OAAA,CAACJ,MAAM;MAACkD,IAAI,EAAC,mBAAmB;MAAClC,KAAK,EAAEA,KAAM;MAACuC,QAAQ,EAAEA,CAACxB,KAAK,EAAE2B,QAAQ,KAAK;QAAEzC,QAAQ,CAACyC,QAAQ,CAAC;MAAC;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxG5C,OAAA,CAACL,MAAM;MAACoD,OAAO,EAAC,UAAU;MAACQ,OAAO,EAAElC,gBAAiB;MAAAa,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEd,CAAC;AAACzC,EAAA,CAhEIF,QAAQ;AAAAuD,EAAA,GAARvD,QAAQ;AAkEd,eAAeA,QAAQ;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}