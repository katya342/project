{"ast":null,"code":"\n// import React from \"react\";\n\n// import { format, addMonths, subMonths, startOfWeek,\n// addDays, startOfMonth, endOfMonth, endOfWeek, isSameMonth, isSameDay, parse \n// } from \"date-fns\";\n\n// class Calendar extends React.Component {\n\n//     state = {\n//         currentMonth: new Date(),\n//         selectedDate: new Date()\n//     };\n\n//     prevMonth = () => {\n//         this.setState({\n//             currentMonth: addMonths(this.state.currentMonth, 1)\n//             // console.log()\n//         });\n\n//       };\n\n//     nextMonth = () => {\n//         this.setState({\n//             currentMonth: subMonths(this.state.currentMonth, 1)\n//         });\n//       };\n\n//       onDateClick = day => {\n//         this.setState({\n//           selectedDate: day\n//         });\n//       };\n\n//     renderHeader() {\n\n//         const dateFormat = \"MMMM yyyy\";\n//         return (\n//             <div className=\"header row flex-middle\">\n//                 <div className=\"col col-start\">\n//                     <div className=\"icon\" onClick={this.prevMonth}>\n\n//                     chevron_left\n//                     </div>\n//                 </div>\n//                 <div className=\"col col-center\">\n//                     <span>\n//                         {format(this.state.currentMonth, dateFormat)}\n\n//                     </span>\n//                 </div>\n//                 <div onClick={this.nextMonth} className=\"col col-end\">\n//                     <div className=\"icon\">chevron_right</div>\n//                 </div>\n//             </div>\n\n//         )\n//     };\n//     renderDays() {\n//         const dateFormat = \"dd\";\n//         const days = [];\n//         let startDate = startOfWeek(this.state.currentMonth);\n//         // console.log(startDate);\n//         for (let i = 0; i < 7; i++)\n//         {\n//             days.push(\n//                 <div key={i}>\n//                     {format(addDays(startDate, i), dateFormat)}\n//                 </div>\n//             )\n//         }\n//         return <div className=\"days row\">{days}</div>\n//     }\n//     renderCells() {\n//         const [currentMonth, selectedDate] = this.state;\n//         const monthStart = startOfMonth(currentMonth);\n//         const monthEnd = endOfMonth(monthStart);\n//         const startDate = startOfWeek(monthStart);\n//         const endDate = endOfWeek(monthEnd);\n\n//         const dateFormat = \"D\";\n//         const rows = [];\n//         let days = [];\n//         let day = startDate;\n//         let formattedDate = \"\";\n//         while(day <= endDate)\n//         {\n//             for(let i = 0; i < 7; i++)\n//             {\n//                 formattedDate = format(day, dateFormat);\n//                 const cloneDay = day;\n//                 days.push(\n//                     <div\n//                       className={`col cell ${\n//                         !isSameMonth(day, monthStart)\n//                           ? \"disabled\"\n//                           : isSameDay(day, selectedDate) ? \"selected\" : \"\"\n//                       }`}\n//                       key={day}\n//                       onClick={() => this.onDateClick(parse(cloneDay))}\n//                     >\n//                       <span className=\"number\">{formattedDate}</span>\n//                       <span className=\"bg\">{formattedDate}</span>\n//                     </div>\n//                   );\n//                   day = addDays(day, 1);\n//             }\n//             rows.push(\n//                 <div className=\"row\" key={day}>\n//                   {days}\n//                 </div>\n//               );\n//               days = [];\n//         }\n\n//     }\n//     render() {\n//         return(\n//         <div className=\"calendar\">\n//             {this.renderHeader()}\n//             {this.renderDays()}\n//             {this.renderCells()}\n\n//         </div>\n\n//         )\n//     }\n// }\n\n// export default Calendar;","map":{"version":3,"names":[],"sources":["C:/Proggramming/app-front/src/components/scheduler/Calendar.js"],"sourcesContent":["\r\n// import React from \"react\";\r\n\r\n// import { format, addMonths, subMonths, startOfWeek,\r\n// addDays, startOfMonth, endOfMonth, endOfWeek, isSameMonth, isSameDay, parse \r\n// } from \"date-fns\";\r\n\r\n// class Calendar extends React.Component {\r\n\r\n//     state = {\r\n//         currentMonth: new Date(),\r\n//         selectedDate: new Date()\r\n//     };\r\n\r\n//     prevMonth = () => {\r\n//         this.setState({\r\n//             currentMonth: addMonths(this.state.currentMonth, 1)\r\n//             // console.log()\r\n//         });\r\n      \r\n//       };\r\n     \r\n//     nextMonth = () => {\r\n//         this.setState({\r\n//             currentMonth: subMonths(this.state.currentMonth, 1)\r\n//         });\r\n//       };\r\n      \r\n//       onDateClick = day => {\r\n//         this.setState({\r\n//           selectedDate: day\r\n//         });\r\n//       };\r\n\r\n//     renderHeader() {\r\n\r\n//         const dateFormat = \"MMMM yyyy\";\r\n//         return (\r\n//             <div className=\"header row flex-middle\">\r\n//                 <div className=\"col col-start\">\r\n//                     <div className=\"icon\" onClick={this.prevMonth}>\r\n                      \r\n//                     chevron_left\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"col col-center\">\r\n//                     <span>\r\n//                         {format(this.state.currentMonth, dateFormat)}\r\n                       \r\n//                     </span>\r\n//                 </div>\r\n//                 <div onClick={this.nextMonth} className=\"col col-end\">\r\n//                     <div className=\"icon\">chevron_right</div>\r\n//                 </div>\r\n//             </div>\r\n            \r\n//         )\r\n//     };\r\n//     renderDays() {\r\n//         const dateFormat = \"dd\";\r\n//         const days = [];\r\n//         let startDate = startOfWeek(this.state.currentMonth);\r\n//         // console.log(startDate);\r\n//         for (let i = 0; i < 7; i++)\r\n//         {\r\n//             days.push(\r\n//                 <div key={i}>\r\n//                     {format(addDays(startDate, i), dateFormat)}\r\n//                 </div>\r\n//             )\r\n//         }\r\n//         return <div className=\"days row\">{days}</div>\r\n//     }\r\n//     renderCells() {\r\n//         const [currentMonth, selectedDate] = this.state;\r\n//         const monthStart = startOfMonth(currentMonth);\r\n//         const monthEnd = endOfMonth(monthStart);\r\n//         const startDate = startOfWeek(monthStart);\r\n//         const endDate = endOfWeek(monthEnd);\r\n        \r\n//         const dateFormat = \"D\";\r\n//         const rows = [];\r\n//         let days = [];\r\n//         let day = startDate;\r\n//         let formattedDate = \"\";\r\n//         while(day <= endDate)\r\n//         {\r\n//             for(let i = 0; i < 7; i++)\r\n//             {\r\n//                 formattedDate = format(day, dateFormat);\r\n//                 const cloneDay = day;\r\n//                 days.push(\r\n//                     <div\r\n//                       className={`col cell ${\r\n//                         !isSameMonth(day, monthStart)\r\n//                           ? \"disabled\"\r\n//                           : isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n//                       }`}\r\n//                       key={day}\r\n//                       onClick={() => this.onDateClick(parse(cloneDay))}\r\n//                     >\r\n//                       <span className=\"number\">{formattedDate}</span>\r\n//                       <span className=\"bg\">{formattedDate}</span>\r\n//                     </div>\r\n//                   );\r\n//                   day = addDays(day, 1);\r\n//             }\r\n//             rows.push(\r\n//                 <div className=\"row\" key={day}>\r\n//                   {days}\r\n//                 </div>\r\n//               );\r\n//               days = [];\r\n//         }\r\n\r\n\r\n//     }\r\n//     render() {\r\n//         return(\r\n//         <div className=\"calendar\">\r\n//             {this.renderHeader()}\r\n//             {this.renderDays()}\r\n//             {this.renderCells()}\r\n    \r\n//         </div>\r\n  \r\n\r\n//         )\r\n//     }\r\n// }\r\n       \r\n\r\n// export default Calendar;"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}