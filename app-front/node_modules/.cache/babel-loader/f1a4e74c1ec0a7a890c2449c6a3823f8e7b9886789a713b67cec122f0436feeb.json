{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\project\\\\app-front\\\\src\\\\components\\\\subscriptions\\\\SubsComponent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport api from \"../../api\";\nimport { Box, Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubsComponent = () => {\n  _s();\n  const [subData, setSubData] = useState([]);\n  const [activeCounter, setActiveCounter] = useState(0);\n  const handleUnsubscribe = async subId => {\n    try {\n      await api.post(`/user/unsubscribe/${subId}`);\n      // После отмены подписки обновляем данные\n      fetchData();\n    } catch (error) {\n      console.error('Error unsubscribing:', error);\n    }\n  };\n  const fetchData = async () => {\n    try {\n      const response = await api.get('/user/subscriptions');\n      const subscriptions = response.data.success;\n      setSubData(subscriptions);\n      const activeCounter = subscriptions.filter(sub => sub.active).length;\n      setActiveCounter(activeCounter);\n    } catch (error) {\n      console.error('Error fetching subscriptions:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchPlanInfo = async planId => {\n    try {\n      const response = await api.get(`/plans/${planId}`);\n      return response.data.success;\n    } catch (error) {\n      console.error(`Error fetching plan info for plan ${planId}:`, error);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Activated subscription count: \", activeCounter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Subscriptions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subData.map(sub => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Plan ID: \", sub.plan_id, \", Expires at: \", sub.expires_at, /*#__PURE__*/_jsxDEV(PlanInfo, {\n          planId: sub.plan_id,\n          fetchPlanInfo: fetchPlanInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleUnsubscribe(sub.id),\n          children: \"Cancel subscription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, sub.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(SubsComponent, \"0v8BEeCP2UgrCVgFSYPPKOHE3yI=\");\n_c = SubsComponent;\nconst PlanInfo = ({\n  planId,\n  fetchPlanInfo\n}) => {\n  _s2();\n  const [planInfo, setPlanInfo] = useState(null);\n  useEffect(() => {\n    const fetchPlan = async () => {\n      const info = await fetchPlanInfo(planId);\n      setPlanInfo(info);\n    };\n    fetchPlan();\n  }, [planId, fetchPlanInfo]);\n  return planInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Plan Name: \", planInfo.name, \", Description: \", planInfo.description]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }, this);\n};\n_s2(PlanInfo, \"LrZ7U4CAI1SC1l7bbgRLdi7Kh6g=\");\n_c2 = PlanInfo;\nexport default SubsComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"SubsComponent\");\n$RefreshReg$(_c2, \"PlanInfo\");","map":{"version":3,"names":["useState","useEffect","api","Box","Button","Typography","jsxDEV","_jsxDEV","SubsComponent","_s","subData","setSubData","activeCounter","setActiveCounter","handleUnsubscribe","subId","post","fetchData","error","console","response","get","subscriptions","data","success","filter","sub","active","length","fetchPlanInfo","planId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","plan_id","expires_at","PlanInfo","onClick","id","_c","_s2","planInfo","setPlanInfo","fetchPlan","info","name","description","_c2","$RefreshReg$"],"sources":["C:/Programming/project/app-front/src/components/subscriptions/SubsComponent.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport api from \"../../api\";\r\n\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\n\r\nconst SubsComponent = () => {\r\n    const [subData, setSubData] = useState([]);\r\n    const [activeCounter, setActiveCounter] = useState(0);\r\n    \r\n    const handleUnsubscribe = async(subId) => {\r\n        try {\r\n            await api.post(`/user/unsubscribe/${subId}`);\r\n            // После отмены подписки обновляем данные\r\n            fetchData();\r\n        } catch (error) {\r\n            console.error('Error unsubscribing:', error);\r\n        }\r\n    }\r\n    \r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await api.get('/user/subscriptions');\r\n            const subscriptions = response.data.success;\r\n            setSubData(subscriptions);\r\n            const activeCounter = subscriptions.filter(sub => sub.active).length;\r\n            setActiveCounter(activeCounter);\r\n        } catch (error) {\r\n            console.error('Error fetching subscriptions:', error);\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n    \r\n    const fetchPlanInfo = async (planId) => {\r\n        try {\r\n            const response = await api.get(`/plans/${planId}`);\r\n            return response.data.success;\r\n        } catch (error) {\r\n            console.error(`Error fetching plan info for plan ${planId}:`, error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Typography>Activated subscription count: {activeCounter}</Typography>\r\n            <Typography>Subscriptions:</Typography>\r\n            <ul>\r\n                {subData.map(sub => (\r\n                    <li key={sub.id}>\r\n                        Plan ID: {sub.plan_id}, Expires at: {sub.expires_at}\r\n                        <PlanInfo planId={sub.plan_id} fetchPlanInfo={fetchPlanInfo} />\r\n                        <Button onClick={() => handleUnsubscribe(sub.id)}>Cancel subscription</Button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst PlanInfo = ({ planId, fetchPlanInfo }) => {\r\n    const [planInfo, setPlanInfo] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchPlan = async () => {\r\n            const info = await fetchPlanInfo(planId);\r\n            setPlanInfo(info);\r\n        };\r\n\r\n        fetchPlan();\r\n    }, [planId, fetchPlanInfo]);\r\n\r\n    return (\r\n        planInfo && (\r\n            <div>\r\n                Plan Name: {planInfo.name}, Description: {planInfo.description}\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default SubsComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}