{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\project\\\\app-front\\\\src\\\\components\\\\subscriptions\\\\SubsComponent.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport api from \"../../api\";\nimport { Box, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubsComponent = () => {\n  _s();\n  const [subData, setSubData] = useState([]);\n  const [unactiveSubData, setUnactiveSubData] = useState([]);\n  const [activeCounter, setActiveCounter] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await api.get('/user/active-subs');\n        if (Array.isArray(response.data.success)) {\n          setSubData(response.data.success);\n          const counter = response.data.success.reduce((acc, sub) => acc + (sub.active ? 1 : 0), 0);\n          setActiveCounter(counter);\n          const secondResponse = api.get('/user/unactive-subs');\n          setUnactiveSubData(secondResponse);\n        } else {\n          console.error('Invalid data format:', response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching active subscriptions:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: activeCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(SubsComponent, \"w6WXx5bR2klEGmvwd+vXGATcsRE=\");\n_c = SubsComponent;\nexport default SubsComponent;\nvar _c;\n$RefreshReg$(_c, \"SubsComponent\");","map":{"version":3,"names":["useState","useEffect","api","Box","Typography","jsxDEV","_jsxDEV","SubsComponent","_s","subData","setSubData","unactiveSubData","setUnactiveSubData","activeCounter","setActiveCounter","fetchData","response","get","Array","isArray","data","success","counter","reduce","acc","sub","active","secondResponse","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Programming/project/app-front/src/components/subscriptions/SubsComponent.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport api from \"../../api\";\r\n\r\nimport {Box, Typography} from \"@mui/material\";\r\n\r\nconst SubsComponent = () => {\r\n    const [subData, setSubData] = useState([]);\r\n    const [unactiveSubData, setUnactiveSubData] = useState([]);\r\n    const [activeCounter, setActiveCounter] = useState(0);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await api.get('/user/active-subs');\r\n                if (Array.isArray(response.data.success)) {\r\n                    setSubData(response.data.success);\r\n                    const counter = response.data.success.reduce((acc, sub) => acc + (sub.active ? 1 : 0), 0);\r\n                    setActiveCounter(counter);\r\n                    const secondResponse = api.get('/user/unactive-subs');\r\n                    setUnactiveSubData(secondResponse);\r\n                } else {\r\n                    console.error('Invalid data format:', response.data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching active subscriptions:', error);\r\n            }\r\n        };\r\n    \r\n        fetchData();\r\n    }, []);\r\n    \r\n\r\n    return (\r\n        <Box>\r\n            <Typography>{activeCounter}</Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default SubsComponent;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,WAAW;AAE3B,SAAQC,GAAG,EAAEC,UAAU,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrDC,SAAS,CAAC,MAAM;IACZ,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,mBAAmB,CAAC;QACnD,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,EAAE;UACtCX,UAAU,CAACM,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;UACjC,MAAMC,OAAO,GAAGN,QAAQ,CAACI,IAAI,CAACC,OAAO,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,IAAIC,GAAG,CAACC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;UACzFZ,gBAAgB,CAACQ,OAAO,CAAC;UACzB,MAAMK,cAAc,GAAGzB,GAAG,CAACe,GAAG,CAAC,qBAAqB,CAAC;UACrDL,kBAAkB,CAACe,cAAc,CAAC;QACtC,CAAC,MAAM;UACHC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEb,QAAQ,CAACI,IAAI,CAAC;QACxD;MACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAChE;IACJ,CAAC;IAEDd,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIT,OAAA,CAACH,GAAG;IAAA2B,QAAA,eACAxB,OAAA,CAACF,UAAU;MAAA0B,QAAA,EAAEjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA/BID,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}