{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proggramming\\\\app-front\\\\src\\\\components\\\\scheduler\\\\Calendar.js\";\nimport React from \"react\";\nimport api from \"../../api\";\nimport { format, startOfWeek, addDays, startOfMonth, endOfMonth, endOfWeek, isSameMonth, isSameDay, parse, addMonths, subMonths, startOfDay, isValid } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onDateClick = day => {\n      this.setState({\n        selectedDate: day\n      });\n    };\n    this.nextMonth = () => {\n      this.setState({\n        currentMonth: addMonths(this.state.currentMonth, 1)\n      });\n    };\n    this.prevMonth = () => {\n      this.setState({\n        currentMonth: subMonths(this.state.currentMonth, 1)\n      });\n    };\n    this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      workoutDate: []\n    };\n  }\n  renderHeader() {\n    const dateFormat = \"MMMM yyyy\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header row flex-middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          onClick: this.prevMonth,\n          children: \"chevron_left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: format(this.state.currentMonth, dateFormat)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-end\",\n        onClick: this.nextMonth,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: \"chevron_right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n  renderDays() {\n    const dateFormat = \"dddd\";\n    const days = [];\n    let startDate = startOfWeek(this.state.currentMonth);\n    for (let i = 0; i < 7; i++) {\n      days.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col col-center\",\n        children: format(addDays(startDate, i), dateFormat)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"days row\",\n      children: days\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  }\n  renderCells() {\n    const {\n      currentMonth,\n      selectedDate\n    } = this.state;\n    const monthStart = startOfMonth(currentMonth);\n    const monthEnd = endOfMonth(monthStart);\n    const startDate = startOfWeek(monthStart);\n    const endDate = endOfWeek(monthEnd);\n    const dateFormat = \"d\";\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = format(day, dateFormat);\n        const cloneDay = day;\n        const hasWorkout = this.state.workoutDate.some(date => isSameDay(startOfDay(date), startOfDay(cloneDay)));\n        console.log(`Date: ${cloneDay}, hasWorkout: ${hasWorkout}`);\n        days.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col cell ${!isSameMonth(day, monthStart) ? \"disabled\" : isSameDay(day, selectedDate) ? \"selected\" : \"\"} ${hasWorkout ? \"has-workout\" : \"\"}`,\n          onClick: () => this.onDateClick(parse(cloneDay)),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"number\",\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bg\",\n            children: formattedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this));\n        day = addDays(day, 1);\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: days\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this));\n      days = [];\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 16\n    }, this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: [this.renderHeader(), this.renderCells()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Calendar;","map":{"version":3,"names":["React","api","format","startOfWeek","addDays","startOfMonth","endOfMonth","endOfWeek","isSameMonth","isSameDay","parse","addMonths","subMonths","startOfDay","isValid","jsxDEV","_jsxDEV","Calendar","Component","constructor","props","onDateClick","day","setState","selectedDate","nextMonth","currentMonth","state","prevMonth","Date","workoutDate","renderHeader","dateFormat","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderDays","days","startDate","i","push","renderCells","monthStart","monthEnd","endDate","rows","formattedDate","cloneDay","hasWorkout","some","date","console","log","render"],"sources":["C:/Proggramming/app-front/src/components/scheduler/Calendar.js"],"sourcesContent":["import React from \"react\";\r\nimport api from \"../../api\";\r\nimport {\r\n    format,\r\n    startOfWeek,\r\n    addDays,\r\n    startOfMonth,\r\n    endOfMonth,\r\n    endOfWeek,\r\n    isSameMonth,\r\n    isSameDay,\r\n    parse,\r\n    addMonths,\r\n    subMonths,\r\n    startOfDay,\r\n    isValid\r\n} from \"date-fns\";\r\n\r\nclass Calendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: new Date(),\r\n            selectedDate: new Date(),\r\n            workoutDate: [],\r\n        };\r\n    }\r\n\r\n   \r\n    \r\n    \r\n\r\n\r\n    onDateClick = (day) => {\r\n        this.setState({\r\n            selectedDate: day,\r\n        });\r\n    };\r\n\r\n    nextMonth = () => {\r\n        this.setState({\r\n            currentMonth: addMonths(this.state.currentMonth, 1),\r\n        });\r\n    };\r\n\r\n    prevMonth = () => {\r\n        this.setState({\r\n            currentMonth: subMonths(this.state.currentMonth, 1),\r\n        });\r\n    };\r\n\r\n    renderHeader() {\r\n        const dateFormat = \"MMMM yyyy\";\r\n\r\n        return (\r\n            <div className=\"header row flex-middle\">\r\n                <div className=\"col col-start\">\r\n                    <div className=\"icon\" onClick={this.prevMonth}>\r\n                        chevron_left\r\n                    </div>\r\n                </div>\r\n                <div className=\"col col-center\">\r\n                    <span>{format(this.state.currentMonth, dateFormat)}</span>\r\n                </div>\r\n                <div className=\"col col-end\" onClick={this.nextMonth}>\r\n                    <div className=\"icon\">chevron_right</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderDays() {\r\n        const dateFormat = \"dddd\";\r\n        const days = [];\r\n\r\n        let startDate = startOfWeek(this.state.currentMonth);\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            days.push(\r\n                <div className=\"col col-center\" key={i}>\r\n                    {format(addDays(startDate, i), dateFormat)}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <div className=\"days row\">{days}</div>;\r\n    }\r\n\r\n    renderCells() {\r\n        const { currentMonth, selectedDate } = this.state;\r\n        const monthStart = startOfMonth(currentMonth);\r\n        const monthEnd = endOfMonth(monthStart);\r\n        const startDate = startOfWeek(monthStart);\r\n        const endDate = endOfWeek(monthEnd);\r\n\r\n        const dateFormat = \"d\";\r\n        const rows = [];\r\n\r\n        let days = [];\r\n        let day = startDate;\r\n        let formattedDate = \"\";\r\n\r\n        while (day <= endDate) {\r\n            for (let i = 0; i < 7; i++) {\r\n                formattedDate = format(day, dateFormat);\r\n                const cloneDay = day;\r\n                const hasWorkout = this.state.workoutDate.some((date) =>\r\n                    isSameDay(startOfDay(date), startOfDay(cloneDay))\r\n                );\r\n                console.log(`Date: ${cloneDay}, hasWorkout: ${hasWorkout}`);\r\n\r\n                days.push(\r\n                    <div\r\n                        className={`col cell ${!isSameMonth(day, monthStart)\r\n                            ? \"disabled\"\r\n                            : isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                            } ${hasWorkout ? \"has-workout\" : \"\"}`}\r\n                        key={day}\r\n                        onClick={() => this.onDateClick(parse(cloneDay))}\r\n                    >\r\n                        <span className=\"number\">{formattedDate}</span>\r\n                        <span className=\"bg\">{formattedDate}</span>\r\n                    </div>\r\n                );\r\n                day = addDays(day, 1);\r\n            }\r\n            rows.push(\r\n                <div className=\"row\" key={day}>\r\n                    {days}\r\n                </div>\r\n            );\r\n            days = [];\r\n        }\r\n        return <div className=\"body\">{rows}</div>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar\">\r\n                {this.renderHeader()}\r\n                {/* {this.renderDays()} */}\r\n                {this.renderCells()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}