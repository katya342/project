{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import api from\"../../api\";import styles from\"./SubscriptionPage.module.css\";import{redirect}from\"react-router-dom\";import{Navigate,useNavigate}from'react-router-dom';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const SubscriptionPage=()=>{const[planData,setPlanData]=useState([]);const[selectedPlan,setSelectedPlan]=useState(null);const[modal,setShowModal]=useState(false);const[errorMessage,setErrorMessage]=useState('');const navigate=useNavigate();// let count = 1;\nlet temp=true;useEffect(()=>{api.get('/user/plans').then(response=>{setPlanData(response.data['All plans: ']||[]);});},[]);const redirectToPlansPage=plan=>{console.log(plan);navigate(\"/plans/\".concat(plan.id),{state:{planData:plan}});};// const handleSubscribe = () => {\n//     const planId = selectedPlan.id;\n//     if (planId) {\n//         api.post(`/user/add-subscription/${planId}`)\n//             .then(response => {\n//                 console.log(response);\n//                 setErrorMessage(\"Success\");\n//                 setShowModal(true);\n//             })\n//             .catch(error => {\n//                 setErrorMessage(error.response.data.error);\n//                 setShowModal(true);\n//             });\n//     }\n// }\nconst closeModal=()=>{setShowModal(false);setErrorMessage('');};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"container text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row align-items-center\",children:planData.map(plan=>/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Name: \",plan.name]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Price: \",plan.price]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Duration: \",plan.duration_month]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:()=>redirectToPlansPage(plan),children:\"Select Plan\"})]},plan.id))})})});};export default SubscriptionPage;","map":{"version":3,"names":["React","useEffect","useState","api","styles","redirect","Navigate","useNavigate","jsxs","_jsxs","jsx","_jsx","SubscriptionPage","planData","setPlanData","selectedPlan","setSelectedPlan","modal","setShowModal","errorMessage","setErrorMessage","navigate","temp","get","then","response","data","redirectToPlansPage","plan","console","log","concat","id","state","closeModal","children","className","map","name","price","duration_month","type","onClick"],"sources":["C:/Proggramming/app-front/src/components/subscriptions/SubscriptionPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport api from \"../../api\";\r\nimport styles from \"./SubscriptionPage.module.css\";\r\nimport { redirect } from \"react-router-dom\";\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nconst SubscriptionPage = () => {\r\n    const [planData, setPlanData] = useState([]);\r\n    const [selectedPlan, setSelectedPlan] = useState(null);\r\n    const [modal, setShowModal] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const navigate = useNavigate();\r\n    // let count = 1;\r\n    let temp = true;\r\n    useEffect(() => {\r\n        api.get('/user/plans').then(response => {\r\n            setPlanData(response.data['All plans: '] || []);\r\n        });\r\n    }, []);\r\n\r\n    const redirectToPlansPage = (plan) => {\r\n        console.log(plan);\r\n        navigate(`/plans/${plan.id}`, {state: {planData: plan}});\r\n    }\r\n    // const handleSubscribe = () => {\r\n    //     const planId = selectedPlan.id;\r\n    //     if (planId) {\r\n    //         api.post(`/user/add-subscription/${planId}`)\r\n    //             .then(response => {\r\n    //                 console.log(response);\r\n    //                 setErrorMessage(\"Success\");\r\n    //                 setShowModal(true);\r\n    //             })\r\n    //             .catch(error => {\r\n    //                 setErrorMessage(error.response.data.error);\r\n    //                 setShowModal(true);\r\n\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n        setErrorMessage('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"container text-center\">\r\n                <div className=\"row align-items-center\">\r\n                    {planData.map(plan => (\r\n                        <div key={plan.id} className=\"col\">\r\n                            \r\n                            <div>Name: {plan.name}</div>\r\n                            <div>Price: {plan.price}</div>\r\n                            <div>Duration: {plan.duration_month}</div>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-secondary\"\r\n                                onClick={() => redirectToPlansPage(plan)}\r\n                            >\r\n                                Select Plan\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* <Modal show={modal} onHide={closeModal}>\r\n                <Modal.Header closeButton>\r\n\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {temp ? (\r\n                        <p>{errorMessage}</p>\r\n                    ) : (\r\n                        <p>Succes</p>\r\n                    )}\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={closeModal}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal> */}\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubscriptionPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,GAAG,KAAM,WAAW,CAC3B,MAAO,CAAAC,MAAM,KAAM,+BAA+B,CAClD,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAEzD,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACa,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACe,KAAK,CAAEC,YAAY,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACiB,YAAY,CAAEC,eAAe,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAAAmB,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAC9B;AACA,GAAI,CAAAe,IAAI,CAAG,IAAI,CACfrB,SAAS,CAAC,IAAM,CACZE,GAAG,CAACoB,GAAG,CAAC,aAAa,CAAC,CAACC,IAAI,CAACC,QAAQ,EAAI,CACpCX,WAAW,CAACW,QAAQ,CAACC,IAAI,CAAC,aAAa,CAAC,EAAI,EAAE,CAAC,CACnD,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,mBAAmB,CAAIC,IAAI,EAAK,CAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CACjBP,QAAQ,WAAAU,MAAA,CAAWH,IAAI,CAACI,EAAE,EAAI,CAACC,KAAK,CAAE,CAACpB,QAAQ,CAAEe,IAAI,CAAC,CAAC,CAAC,CAC5D,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAM,CACrBhB,YAAY,CAAC,KAAK,CAAC,CACnBE,eAAe,CAAC,EAAE,CAAC,CACvB,CAAC,CAED,mBACIT,IAAA,QAAAwB,QAAA,cAEIxB,IAAA,QAAKyB,SAAS,CAAC,uBAAuB,CAAAD,QAAA,cAClCxB,IAAA,QAAKyB,SAAS,CAAC,wBAAwB,CAAAD,QAAA,CAClCtB,QAAQ,CAACwB,GAAG,CAACT,IAAI,eACdnB,KAAA,QAAmB2B,SAAS,CAAC,KAAK,CAAAD,QAAA,eAE9B1B,KAAA,QAAA0B,QAAA,EAAK,QAAM,CAACP,IAAI,CAACU,IAAI,EAAM,CAAC,cAC5B7B,KAAA,QAAA0B,QAAA,EAAK,SAAO,CAACP,IAAI,CAACW,KAAK,EAAM,CAAC,cAC9B9B,KAAA,QAAA0B,QAAA,EAAK,YAAU,CAACP,IAAI,CAACY,cAAc,EAAM,CAAC,cAC1C7B,IAAA,WACI8B,IAAI,CAAC,QAAQ,CACbL,SAAS,CAAC,mBAAmB,CAC7BM,OAAO,CAAEA,CAAA,GAAMf,mBAAmB,CAACC,IAAI,CAAE,CAAAO,QAAA,CAC5C,aAED,CAAQ,CAAC,GAXHP,IAAI,CAACI,EAYV,CACR,CAAC,CACD,CAAC,CAEL,CAAC,CAsBL,CAAC,CAEd,CAAC,CAED,cAAe,CAAApB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}